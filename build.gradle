/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

def artifact = new Properties()
artifact.load(new FileInputStream("${project.projectDir}${File.separator}deploy.settings"))

version = artifact.version

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
    }
	dependencies {
		classpath 'com.android.tools.build:gradle:3.2.1'
		classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}


allprojects {
	repositories {
		jcenter()
	}
}


// In this section you declare where to find the dependencies of your project
repositories {
   mavenLocal()
   jcenter()
   maven {
      url "https://dl.bintray.com/mtschach/Mss"
   }
}

configurations {
   clientCompile
   testCompile.extendsFrom clientCompile
   compile.extendsFrom clientCompile
}


sourceSets {
   client {
      java {
         srcDir 'src'
      }
   }

   test {
      java {
         compileClasspath += client.output
         runtimeClasspath += client.output
         srcDir 'test'
      }
   }
}


dependencies {
   clientCompile 'Mss:MssConfigTools:latest.release'
   clientCompile 'Mss:MssUtils:latest.release'
   
   clientCompile group: 'org.apache.logging.log4j'                                  , name: 'log4j-core'                , version: 'latest.release'
   clientCompile group: 'org.apache.logging.log4j'                                  , name: 'log4j-api'                 , version: 'latest.release'
   clientCompile group: 'org.apache.logging.log4j'                                  , name: 'log4j-slf4j-impl'          , version: 'latest.release'
   clientCompile group: 'org.apache.commons'                                        , name: 'commons-lang3'             , version: 'latest.release'
   clientCompile group: 'org.apache.httpcomponents'                                 , name: 'httpclient'                , version: 'latest.release'
   clientCompile group: 'commons-beanutils'                                         , name: 'commons-beanutils'         , version: 'latest.release'
   clientCompile group: 'commons-cli'                                               , name: 'commons-cli'               , version: 'latest.release'
   clientCompile group: 'org.eclipse.jetty'                                         , name: 'jetty-servlet'             , version: '9.4.20.v20190813'
   clientCompile group: 'org.eclipse.jetty'                                         , name: 'jetty-server'              , version: '9.4.20.v20190813'
   clientCompile group: 'org.eclipse.jetty'                                         , name: 'jetty-http'                , version: '9.4.20.v20190813'
   clientCompile group: 'commons-cli'                                               , name: 'commons-cli'               , version: 'latest.release'
   clientCompile group: 'org.codehaus.jackson'                                      , name: 'jackson-core-asl'          , version: 'latest.release'
   clientCompile group: 'org.codehaus.jackson'                                      , name: 'jackson-mapper-asl'        , version: 'latest.release'
   clientCompile group: 'javax.ws.rs'                                               , name: 'javax.ws.rs-api'           , version: 'latest.release'
   clientCompile group: 'org.glassfish.jersey.containers'                           , name: 'jersey-container-servlet'  , version: '2.29.1'


	testCompile group: 'junit'                                                 , name: 'junit'                     , version: 'latest.release'
	testCompile group: 'org.easymock'                                          , name: 'easymock'                  , version: 'latest.release'
}

jar {
   from(sourceSets.client.output)
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
   manifest {
        attributes 'Implementation-Title': 'MssTools',  
         'Implementation-Version': version
    }
    baseName = project.name + '-all'
    from { configurations.clientCompile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task publishLocal {
   dependsOn 'publishToMavenLocal'
}

apply from: 'deploy.gradle'
